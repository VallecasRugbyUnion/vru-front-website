/* tslint:disable */
/* eslint-disable */
/**
 * backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { Register } from '../models/index';
import { RegisterFromJSON, RegisterToJSON } from '../models/index';

export interface RegisterCreateRequest {
  register: Register;
}

/**
 *
 */
export class RegisterApi extends runtime.BaseAPI {
  /**
   */
  async registerCreateRaw(
    requestParameters: RegisterCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Register>> {
    if (requestParameters.register === null || requestParameters.register === undefined) {
      throw new runtime.RequiredError(
        'register',
        'Required parameter requestParameters.register was null or undefined when calling registerCreate.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('jwtAuth', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/api/register/`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: RegisterToJSON(requestParameters.register),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, jsonValue => RegisterFromJSON(jsonValue));
  }

  /**
   */
  async registerCreate(
    requestParameters: RegisterCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Register> {
    const response = await this.registerCreateRaw(requestParameters, initOverrides);
    return await response.value();
  }
}

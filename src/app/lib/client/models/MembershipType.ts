/* tslint:disable */
/* eslint-disable */
/**
 * backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface MembershipType
 */
export interface MembershipType {
  /**
   *
   * @type {string}
   * @memberof MembershipType
   */
  uuid: string;
  /**
   * Nombre del tipo de membresía.
   * @type {string}
   * @memberof MembershipType
   */
  name: string;
  /**
   * Descripción del tipo de membresía.
   * @type {string}
   * @memberof MembershipType
   */
  description?: string | null;
  /**
   * Precio del tipo de membresía.
   * @type {number}
   * @memberof MembershipType
   */
  price?: number;
}

/**
 * Check if a given object implements the MembershipType interface.
 */
export function instanceOfMembershipType(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'uuid' in value;
  isInstance = isInstance && 'name' in value;

  return isInstance;
}

export function MembershipTypeFromJSON(json: any): MembershipType {
  return MembershipTypeFromJSONTyped(json, false);
}

export function MembershipTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipType {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    uuid: json['uuid'],
    name: json['name'],
    description: !exists(json, 'description') ? undefined : json['description'],
    price: !exists(json, 'price') ? undefined : json['price'],
  };
}

export function MembershipTypeToJSON(value?: MembershipType | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    uuid: value.uuid,
    name: value.name,
    description: value.description,
    price: value.price,
  };
}

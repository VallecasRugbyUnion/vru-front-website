/* tslint:disable */
/* eslint-disable */
/**
 * backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipType } from './MembershipType';
import { MembershipTypeFromJSON, MembershipTypeFromJSONTyped, MembershipTypeToJSON } from './MembershipType';
import type { SimpleSeason } from './SimpleSeason';
import { SimpleSeasonFromJSON, SimpleSeasonFromJSONTyped, SimpleSeasonToJSON } from './SimpleSeason';

/**
 *
 * @export
 * @interface Membership
 */
export interface Membership {
  /**
   *
   * @type {string}
   * @memberof Membership
   */
  uuid: string;
  /**
   *
   * @type {SimpleSeason}
   * @memberof Membership
   */
  season: SimpleSeason;
  /**
   *
   * @type {MembershipType}
   * @memberof Membership
   */
  type: MembershipType;
  /**
   * Campo que muestra si la membres√≠a es recurrente.
   * @type {boolean}
   * @memberof Membership
   */
  isRecurrent?: boolean;
}

/**
 * Check if a given object implements the Membership interface.
 */
export function instanceOfMembership(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'uuid' in value;
  isInstance = isInstance && 'season' in value;
  isInstance = isInstance && 'type' in value;

  return isInstance;
}

export function MembershipFromJSON(json: any): Membership {
  return MembershipFromJSONTyped(json, false);
}

export function MembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): Membership {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    uuid: json['uuid'],
    season: SimpleSeasonFromJSON(json['season']),
    type: MembershipTypeFromJSON(json['type']),
    isRecurrent: !exists(json, 'is_recurrent') ? undefined : json['is_recurrent'],
  };
}

export function MembershipToJSON(value?: Membership | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    uuid: value.uuid,
    season: SimpleSeasonToJSON(value.season),
    type: MembershipTypeToJSON(value.type),
    is_recurrent: value.isRecurrent,
  };
}

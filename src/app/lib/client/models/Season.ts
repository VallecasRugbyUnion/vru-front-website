/* tslint:disable */
/* eslint-disable */
/**
 * backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface Season
 */
export interface Season {
  /**
   *
   * @type {string}
   * @memberof Season
   */
  uuid: string;
  /**
   * Nombre de la temporada.
   * @type {string}
   * @memberof Season
   */
  name: string;
  /**
   * Descripción de la temporada.
   * @type {string}
   * @memberof Season
   */
  description?: string | null;
  /**
   * Fecha de inicio de la temporada.
   * @type {Date}
   * @memberof Season
   */
  startDate?: Date | null;
  /**
   * Fecha de finalización de la temporada.
   * @type {Date}
   * @memberof Season
   */
  endDate?: Date | null;
}

/**
 * Check if a given object implements the Season interface.
 */
export function instanceOfSeason(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'uuid' in value;
  isInstance = isInstance && 'name' in value;

  return isInstance;
}

export function SeasonFromJSON(json: any): Season {
  return SeasonFromJSONTyped(json, false);
}

export function SeasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Season {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    uuid: json['uuid'],
    name: json['name'],
    description: !exists(json, 'description') ? undefined : json['description'],
    startDate: !exists(json, 'start_date')
      ? undefined
      : json['start_date'] === null
        ? null
        : new Date(json['start_date']),
    endDate: !exists(json, 'end_date') ? undefined : json['end_date'] === null ? null : new Date(json['end_date']),
  };
}

export function SeasonToJSON(value?: Season | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    uuid: value.uuid,
    name: value.name,
    description: value.description,
    start_date:
      value.startDate === undefined
        ? undefined
        : value.startDate === null
          ? null
          : value.startDate.toISOString().substring(0, 10),
    end_date:
      value.endDate === undefined
        ? undefined
        : value.endDate === null
          ? null
          : value.endDate.toISOString().substring(0, 10),
  };
}
